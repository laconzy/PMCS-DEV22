<?phpif (!defined('BASEPATH'))    exit('No direct script access allowed');class Bundle_Model extends CI_Model {    public function __construct() {        parent::__construct();        $this->load->database();    }    public function create($data) {        $this->db->insert_batch('cut_bundles', $data);    }    /* public function update($data) {      $data['updated_at'] = date("Y-m-d H:i:s");      $data['updated_by'] = $this->session->userdata('user_id');      $this->db->where('order_id', $data['order_id']);      $this->db->update('order_head', $data);      return true;      } */    /* public function get($id){      $this->db->select('order_head.*,style.style_code,style.style_name,      color.color_code,color.color_name,      customer.cus_code,customer.cus_name as customer_name,      season.season_name'      );      $this->db->from('order_head');      $this->db->join('style','order_head.style = style.style_id');      $this->db->join('color','order_head.color = color.color_id');      $this->db->join('customer','order_head.customer = customer.id');      $this->db->join('season','order_head.season = season.season_id');      $this->db->where('order_id',$id);      $query = $this->db->get();      return $query->row_array();      } */    /* public function get_list($start,$limit,$search,$order)      {      $this->db->select('order_head.*,style.style_name,color.color_name,customer.cus_name,season.season_name,country.country_name');      $this->db->from('order_head');      $this->db->join('style','order_head.style = style.style_id');      $this->db->join('color','order_head.color = color.color_id');      $this->db->join('customer','order_head.customer = customer.id');      $this->db->join('country','order_head.country = country.country_id');      $this->db->join('season','order_head.season = season.season_id');      $like_fields = [      'order_id' => $search,      'order_code' => $search,      'style_name' => $search,      'color_name' => $search,      'cus_name' => $search,      'season_name' => $search      ];      $this->db->like($like_fields);      $query = $this->db->get();      return $query->result_array();      } */    /* public function get_count($search)      {      //  $this->db->select('order_head.*,style.style_name,color.color_name,customer.cus_name,season.season_name,country.country_name');      $this->db->from('order_head');      $this->db->join('style','order_head.style = style.style_id');      $this->db->join('color','order_head.color = color.color_id');      $this->db->join('customer','order_head.customer = customer.id');      $this->db->join('country','order_head.country = country.country_id');      $this->db->join('season','order_head.season = season.season_id');      $like_fields = [      'order_id' => $search,      'order_code' => $search,      'style_name' => $search,      'color_name' => $search,      'cus_name' => $search,      'season_name' => $search      ];      $this->db->like($like_fields);      $count = $this->db->count_all_results();      return $count;      } */    public function destroy($laysheet_no, $bundle_no) {        $this->db->where('laysheet_no', $laysheet_no);        $this->db->where('bundle_no', $bundle_no);        $this->db->delete('cut_bundles');        return true;    }    public function destroy_all($laysheet_no) {        $this->db->where('laysheet_no', $laysheet_no);        $this->db->delete('cut_bundles');        return true;    }    public function get_laysheet_details($laysheet) {        $sql = "SELECTcut_laysheet.laysheet_no,cut_laysheet.cut_plan_id,cut_laysheet.cut_no,cut_laysheet.lay_qty,cut_laysheet.marker_length,cut_laysheet.order_id,cut_laysheet.item_id,cut_laysheet.printed_date,cut_laysheet.printed_by,order_head.order_codeFROMcut_laysheetINNER JOIN order_head ON cut_laysheet.order_id = order_head.order_idWHEREcut_laysheet.laysheet_no = $laysheet";        $query = $this->db->query($sql);        return $query->row_array();    }    public function get_barcode_details($id, $start) {        $sql = "SELECTfg_barcode_head.ord_id,fg_barcode_head.created_by,fg_barcode_head.created_date,fg_barcode_head.id,size.size_code,color.color_code,item.item_code,barcode.barcode_no,barcode.`no`,barcode.printed_by,barcode.printed_date,order_head.order_code,order_head.style,order_head.customer_poFROMfg_barcode_headINNER JOIN fg_barcode ON fg_barcode_head.id = fg_barcode.idINNER JOIN size ON fg_barcode.size_id = size.size_idINNER JOIN color ON fg_barcode.color = color.color_idINNER JOIN item ON fg_barcode.item_id = item.item_idINNER JOIN barcode ON fg_barcode_head.id = barcode.idINNER JOIN order_head ON fg_barcode.order_id = order_head.order_idWHEREfg_barcode_head.id = $id ANDbarcode.`no` >= $start";        // print_r($sql);        $query = $this->db->query($sql);//      $this->db->select('cut_laysheet.*');////      $this->db->from('cut_laysheet');////      $this->db->where('laysheet_no',$laysheet);////      $query = $this->db->get();        return $query->result_array();    }    public function get_cut_plan($cut_plan_id) {        $sql = "SELECT cut_plan.*,style.style_code,color.color_code,item.item_code as item_name FROM cut_plan          INNER JOIN style ON cut_plan.style = style.style_id          INNER JOIN color ON cut_plan.color = color.color_id          INNER JOIN item ON cut_plan.item_id = item.item_id          WHERE cut_plan_id = ?";        //  echo $sql;die();        $query = $this->db->query($sql, [$cut_plan_id]);        return $query->row_array();    }    public function get_cut_details_summery($laysheet) {        $sql = "SELECTcut_plan_detail.detail_id,cut_plan_detail.laysheet_no,cut_plan_detail.size,cut_plan_detail.lay_qty,cut_plan_detail.ratio,cut_plan_detail.qty,cut_plan_detail.line_no,cut_plan_detail.line_ref,cut_plan_detail.marker_ref,cut_plan_detail.marker_legth,cut_plan_detail.marker_lenght2,cut_plan_detail.marker_eff,cut_plan_detail.marker_uom,cut_plan_detail.perimeter_int,cut_plan_detail.perimeter_decimal,cut_plan_detail.site,cut_plan_detail.item_id,cut_plan_detail.mdl_cmp,cut_plan_detail.cut_plan_id,cut_plan_detail.plies,cut_plan_detail.width,size.size_code,order_item_sizes.planned_qty,IFNULL((SELECT SUM(qty) FROM cut_bundles WHERE laysheet_no = ? AND size = cut_plan_detail.size) , 0) AS bundle_qty,(cut_plan_detail.qty - IFNULL((SELECT SUM(qty) FROM cut_bundles WHERE laysheet_no = ? AND size = cut_plan_detail.size) , 0)) AS remaning_qty,order_head.order_codeFROMcut_plan_detailINNER JOIN size ON size.size_id = cut_plan_detail.sizeINNER JOIN cut_laysheet ON cut_laysheet.laysheet_no = cut_plan_detail.laysheet_noINNER JOIN order_items ON order_items.order_id = cut_laysheet.order_id AND order_items.item = cut_laysheet.item_idINNER JOIN order_item_sizes ON order_item_sizes.order_item_id = order_items.id AND order_item_sizes.size = cut_plan_detail.sizeINNER JOIN order_head ON order_items.order_id = order_head.order_idwhere cut_plan_detail.laysheet_no = ?GROUP BY cut_plan_detail.size";        $query = $this->db->query($sql, [$laysheet, $laysheet, $laysheet]);        return $query->result_array();    }    public function get_order_item_details($laysheet) {        $sql = "SELECTorder_items.item,order_items.item_color,order_items.id,order_items.order_id,order_item_sizes.size,order_item_sizes.order_qty,order_item_sizes.planned_qty,size.size_code,color.color_code,item.item_codeFROMorder_itemsINNER JOIN order_item_sizes ON order_items.order_id = order_item_sizes.order_id AND order_items.id = order_item_sizes.order_item_idINNER JOIN size ON order_item_sizes.size = size.size_idINNER JOIN color ON order_items.item_color = color.color_idINNER JOIN item ON order_items.item = item.item_idWHERE	order_items.order_id = $laysheet";        $query = $this->db->query($sql, [$laysheet, $laysheet, $laysheet]);        return $query->result_array();    }    public function get_laysheet_size_details($laysheet) {        $this->db->select('cut_plan_detail.*');        $this->db->from('cut_plan_detail');        $this->db->where('laysheet_no', $laysheet);        $this->db->order_by('size', 'ASC');        $query = $this->db->get();        return $query->result_array();    }    public function get_laysheet_max_bundle_no($laysheet_no) {        $this->db->select_max('bundle_no');        $this->db->where('laysheet_no', $laysheet_no);        $query = $this->db->get('cut_bundles');        $data = $query->row_array();        if ($data['bundle_no'] == null || $data['bundle_no'] == false)            return 1;        else            return ($data['bundle_no'] + 1);    }    public function get_laysheet_remaning_qty($laysheet_no) {        $sql = 'select cut_plan_detail.size,cut_plan_detail.qty,        (cut_plan_detail.qty - IFNULL(SUM(cut_bundles.qty),0)) as remaning_qty        from cut_plan_detail        left join cut_bundles on cut_plan_detail.laysheet_no=cut_bundles.laysheet_no and cut_plan_detail.size=cut_bundles.size        where cut_plan_detail.laysheet_no = ? group by cut_plan_detail.size';        $query = $this->db->query($sql, [$laysheet_no]);        $result = $query->result_array();        $data = [];        foreach ($result as $row) {            $data[$row['size']] = $row['remaning_qty'];        }        //  print_r($data);die();        return $data; //return {size_id : remaning_qty}    }    public function get_bundle_chart($laysheet) {        $this->db->select('cut_bundles.*,size.size_code');        $this->db->join('size', 'size.size_id = cut_bundles.size');        $this->db->from('cut_bundles');        $this->db->where('cut_bundles.laysheet_no', $laysheet);        $query = $this->db->get();        return $query->result_array();    }    public function save_fg_barcode($ord_id) {        $ord_id = $this->input->post('ord_id');        $data = array(            'ord_id' => $ord_id,            'created_by' => $this->session->userdata('user_id')        );        $this->db->insert('fg_barcode_head', $data);        $insert_id = $this->db->insert_id();        return $insert_id;    }    public function save_fg_barcode_detail($id) {        $ord_id = $this->input->post('ord_id');        $items = $this->input->post('items');//        /$this->db->insert_batch('cut_plan_detail', $data);//        $data = array(//            'ord_id' => $ord_id,//            'created_by' => $this->session->userdata('user_id')//        );        $arr = array();        foreach ($items as $key => $value) {            $items[$key]['id'] = $id;        }        //print_r($items);        // print_r($items);        $this->db->insert_batch('fg_barcode', $items);        $sql = "SELECTfg_barcode_head.id,fg_barcode_head.ord_id,fg_barcode_head.created_by,fg_barcode_head.created_date,`user`.first_nameFROMfg_barcode_headINNER JOIN `user` ON fg_barcode_head.created_by = `user`.idWHEREfg_barcode_head.ord_id =$ord_id ";        $query = $this->db->query($sql);        return $query->result_array();        //$insert_id = $this->db->insert_id();    }    public function get_saved_details($ord_id) {        $sql = "SELECTfg_barcode_head.id,fg_barcode_head.ord_id,fg_barcode_head.created_by,fg_barcode_head.created_date,`user`.first_nameFROMfg_barcode_headINNER JOIN `user` ON fg_barcode_head.created_by = `user`.idWHEREfg_barcode_head.ord_id =$ord_id";        $query = $this->db->query($sql);        return $query->result_array();    }    public function print_data($bundle_no, $qty) {        $sql = "SELECTIFNULL(max(no),0) maxnoFROM `barcode`WHEREbarcode.id =$bundle_no";        $query = $this->db->query($sql);        $result = $query->row_array();        //print_r($result);        $start = $result['maxno'] + 1;        $end = $qty + $start;//        $arr = array();        for ($index = $start; $index < $end; $index++) {            $data = [                'id' => $bundle_no,                'barcode_no' => 'M' . $bundle_no . $index,                'printed_by' => $this->session->userdata('user_id'),                'no' => $index            ];            $this->db->insert('barcode', $data);        }        return $start;    }    public function get_order_details($laysheet) {        $sql = "SELECTorder_head.order_id,order_head.order_code,order_head.style,order_head.color,order_head.customer_po,order_head.uom,order_head.customer,order_head.country,order_head.ship_method,order_head.delivary_date,order_head.pcd_date,order_head.planned_delivary_date,order_head.original_ord_qty,order_head.season,order_head.site,order_head.created_at,order_head.created_by,order_head.updated_at,order_head.updated_by,order_head.active,order_head.smv,customer.cus_code,customer.cus_name,style.style_code,style.style_name,color.color_code,color.color_nameFROMorder_headINNER JOIN customer ON order_head.customer = customer.idINNER JOIN style ON order_head.style = style.style_idINNER JOIN color ON order_head.color = color.color_idWHEREorder_head.order_id = $laysheet";        $query = $this->db->query($sql);//      $this->db->select('cut_laysheet.*');////      $this->db->from('cut_laysheet');////      $this->db->where('laysheet_no',$laysheet);////      $query = $this->db->get();        return $query->row_array();    }}